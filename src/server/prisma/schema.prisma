// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Author {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdBy Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  media      String
  published  Boolean   @default(false)
  author     Author    @relation(fields: [authorId], references: [id])
  authorId   Int
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdBy  Int       @default(1)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Feedback   Feedback? @relation(fields: [feedbackId], references: [id])
  feedbackId Int?
  Comment    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  name      String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  icon        String   @default("globe")
  createdBy   Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Post        Post[]
}

model Feedback {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String?
  message   String
  createdBy Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Setting {
  id            Int      @id @default(autoincrement())
  shortName     String
  name          String
  coverImage    String   @default("assets/cover_image.jpg")
  description   String
  phoneNumber   String
  email         String
  facebookLink  String
  xLink         String
  instagramLink String
  linkedInLink  String
  youtubeLink   String
  footerTag     String
  logo          String   @default("assets/logo.png")
  createdBy     Int      @default(1)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
